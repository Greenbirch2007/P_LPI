

第一章　硬件与结构


在安装任何操作系统之前，你必须了解PC的硬件结构，并且懂得如何调查硬件规格，设定硬件资源


１０１．１　　设定BIOS的基本配置


101.3 设定调制解调器与声卡

１０１．４　　设定SCSI设备

１０１．５　扩展卡的安装与设定
１０１．６　设定通信接口设备
１０１．７　设定USB设备



１０１．１　设定BIOS的基本配置


在PC上安装linux之前，要留言的项目有调制解调器，串行端口与并行端口，网卡，SCSI控制器
声卡，硬盘，USB控制器等。
不同类型的硬件设备需要使用不同的硬件资源(I/O,IRQ,DMA)

老式的ISA扩展卡可能需要你自己动手调整硬件上的跳线(jumper)或拨码开关(DIP switch),而其他设备则是需要你进入BIOS来进行调整


BIOS

每种计算机系统大多都有一个固件(firmware),负责将系统硬件初始化成适合加载操作系统的状态，之所以称为"固件"，
是因为它们的性质介于硬件与软件之间。

固件本身是一块ROM芯片，里面含有预先刻录的系统程序，程序不会随着电源关闭而消失。
PC上的固件通常为BIOS(Basic Input/Output System,基本输入、输出系统)，因为它们为操作
系统提供基本的I/O服务。


BIOS的工作原理：初始化系统芯片组，测试内存与其他设备，从几个存储设备中找出操作系统的位置，
最后交手给操作系统的加载程序。此外，BIOS也会提供一个人机界面，
让用户可以调整低端的系统配置，诸如IDE硬盘的结构参数，开机设备，
硬件资源(I/O port,IRQ,DMA)的调配等


大多数PC的开机画面通常会提示你要按哪一个按键，才可以进入BIOS主菜单。

Award与AMI出品的BIOS通常选择【Del】键;
Phoneix BIOS(笔记型计算机上比较常见)，通常选择【ctrl】 +　【Esc】键


进入BIOS设定画面后，通常会出现一个主菜单让你挑选所要设定的项目
实际出现的设定项要看BIOS或系统厂商而定，但是通常会提供
磁盘(访问模式，结构参数...)
内存(频率，高速缓存方式，地址配置...)
内置设备(串行端口，并行端口，USB，声卡...)
硬件时钟等项目



日期和时间


每台PC都内置了一个硬件时钟。硬件时钟的作用是让操作系统能够知道当时的时间。管理
主板的内置硬件时钟是BIOS的基本功能之一，当你进入BIOS设定画面时，
通常会找到一个让你调整时间值的地方。一般而言，只有刚买的PC或更换主板上的长效电池，
才有必要校正硬件时钟。操作系统也有调整硬件时钟的呢你，
甚至可以通过精确的外部时间来源(如NTP server)来校正硬件时钟

大多数操作系统将硬件时钟视为本地时间，但linux让你可选择本地时间或GMT标准时间


磁盘与开机设备

在BIOS设定项目中，另一组需要注意的是存储设备的参数选择。现代PC可以安装多种插入式或固定式储媒，
包括软盘，硬盘，CD-ROM,DVD-ROM,CD-RW,Zip.Jaz磁盘等，
较新的系统能自动检测并妥善设定它们，但是旧版的BIOS可能需要你自己动手选择软盘的规格以及硬盘的结构参数



大多数PC至少支持三种开机储媒：
１．内接式硬盘（IDE,SCSI或两者皆有）
２．CD-ROM(同样是IDE,SCSI)
3. 软盘

在完成系统芯片初始化之后，BIOS会试着在各种储媒上寻找操作系统(或操作系统的加载程序，像是LILO,Grub,WINNT Loader),
服务器级主板的BIOS或是网卡安装了BootROM的主板，甚至可以选择从网络开机。
对于大型企业常用的无盘工作站，可利用网络开机功能来启动linux终端机


现在的BIOS都可让你指定开机顺序，让你选择从光盘开机还是从硬盘开机。
一般而言，在安装操作系统之前，你应该将BIOS调整成从光盘开机，等安装好操作系统之后再改成从硬盘开机。



技巧：

要熟悉一般PC的典型BIOS操作画面以及一般的设定项目


资源分配

BIOS操作画面中的某些细节涉及PC结构的内部硬件资源，包括IRQ(interrupt request),
I/O地址，DMA(Direct Memory Access)信道。
IRQ是从外围设备送到CPU的一种电子信号，用以通知发生了某种CPU
处理的异步事件。

"I/O地址"是CPU地址空间中专为I/O设备(如网卡)所保留的有单地址范围。
不同的设备各自占用不同范围的I/O地址空间。

典型状况是只有两个串行端口，一个并行端口，一个软驱。
两个串行端口可用于外接调制解调器或终端机，

linux加载程序只能通过透过BIOS来取得磁盘的结构信息，也就是
CHS(cylinder,head,sector)参数

bios提供的cylinder参数只有10-bit,对于磁柱多于1024的
磁盘，这表示linux加载程序只能访问磁盘的前1024-cylinder
倘若内核映像文件(kernel image)是放在1024磁柱之后的位置，开机就会失败


避免上这个问题的方法，就是在磁盘的起始出规划一个小小的/boot分区(
通常256MB就足够)，然后将内核映像文件放在此分区内，
就可以确保内核映像文件的位置一定会在BOIS的寻址能力范围内

考点：
在大磁盘上,LILO与内核映像文件的安装位置都必须在1024号磁柱之前


1.101.3 设定调制解调器与声卡

调制解调器(modem)是一种信号转换设备，能将数字信号"调制"(modulate)成模拟洗好，
使其可透过电话线传输出去；
它也能做相反的工作，将　来自电话线的模拟信号"解调"(demodulate)成数字信号，
使其可输入计算机。
通信双方各自安装一台调制解调器，便可透过电话线传输字数据。
除了转换信号形式之外，调制解调器也有数字压缩与错误更正的能力，以提升传输速率和稳定度

数据是一个位接着一个位进入调制解调器的，称为一种“串行式设备”

就功能性而言，内接式与外接式调制解调器并没有显著差异。
从操作系统的角度来看，内接式调制解调器就像是额外的串行端口，
典型的PC通常已有内置两个串行端口（/dev/ttyS0与/dev/ttyS1）
所以内接式调制解调器将会出现在第三个创航端口(/dev/ttys2)

从程序设计者的角度来看，内接式机种跟外接式机种是无法区分的。
大多数的串行端口式内接调制解调器都可以顺利在linux系统功能下运作


调制解调器的硬件资源

外接式调制解调器是连接在串行端口上，所以不需要科技调整硬件资源(I/O port,
DMA,IRQ),只要确定串行端口的通信参数与调制解调器一致即可。
由于外接式调制解调器是安插在PC内部的扩展总线(ISA,PCI)上，
所以必须注意到硬件资源分配的问题

一般，你不必在意PCI形式的内接调制解调器，因为PCI设备的硬件资源是由BIOS或
操作系统自动配置的；
但对于ISA形式的内接调制解调器，则必须赋予它们专用的I/O地址与IRQ.
如果调制解调器与另一个串行端口共享同一个IRQ,那么当你使用调制解调器时，
就不能使用该串行端口


setserial 


在linux系统上，最常用来设定串行端口的是setserial,stty
setserial的用途是在运行时设定串行驱动程序，当你的机器上有非标准或不寻常的串行硬件是
就要用setserial


setserial device [parameters]

其中，
device是要设定的串行端口个(/dev/ttyS0,/dev/ttyS1等)
parameter是串行端口的通信参数


常用的setserial参数


port port_number 

irq num
uart uart_type

spd_hi
spd_vhi
spd_normal

auto_irq

autoconfig
skip_test


stty工具

set tty,stty的主要作用是设定串行设备(特别是终端机)的通信参数，
例如，是否要回显(echo)字符，哪个按键可用来产生break信号，
线速是多少，是否要启动硬件交握功能或是应该以xon/xoff软件方式
来控制流量等

查看特定串行端口的通信参数


stty -F /dev/ttyS0

启动硬件交握功能

stty crtscts -F /dev/ttys0


若要关闭硬件交握，则是在crtscts之前加一个-号

stty -crtscts -F /dev/ttys0


将ttyS0设备的操作参数设定为19200 bps,8数据位，无同位检查，
使用硬件交握，不回显


stty 19200 cs8 -parenb cstscts -echo -F /dev/ttys0



声卡

linux的音频驱动齐全，几乎支持所有的音频芯片组，

必须使用sndconfig或isapnp来来设定，必须设法
查出声卡所占用的硬件资源并将这些信息提供给音频驱动程序


注意，声卡驱动程序是内核模块(kernel module),它们的设定值存储
于/etc/modules.conf



sndconfig

sndconfig是一个文字界面的工具，用与设定linux内核中的音频芯片
模块。当你运行它是，sndconfig会试着侦探你的系统上有没有PnP设备，如果没有

--help
--noprobe
--noautoconfig


isapnp

isapnp专用于支持PnP规格的ISA设备。它的配置文件(conffile)
可以是普通的文本文件或"-"(从STDIN读入配置文件的内容)

-h
-花样百出比

课题 1.101.4  设定SCSI设备

SCSI是一种可同时支持流设备(例如扫描仪)与块式存储设备(例如硬盘，光盘)
的接口。在服务器级的PC,Unix工作站以及较旧的Apple机种上，SCSI是标准配备。

SCSI比IDE强的地方，在于其灵活性与扩充性很多，有较高的传输率


SCSI总线可同时连接多个设备。SCSI总线是一条高质量的排线(用以并联内接设备)
或一组菊链缆线（用以串联外接设备）
整个总线的两端要安装终端电阻以及让信号形成回路，而且至少要有一个SCSI
控制器(SCSI constroller),它是SCSI设备与主机之间的接口。
所有SCSI设备（包括控制器本身）都有一个代表自己的标识符，
称为SCSI地址(SCSI address) 或成SCSI ID,
在同一个总线上不能出现重复的SCSI地址


SCSI 的规格


控制器绑CPU分担I/O工作在SCSI设备传输数据的期间，CPU本身是不介入的，
而不像其他技术，CPU必须全程参与。
就多任务效果而言，SCSI由于价格原因，不应该只出现于服务器的高级文件系统


SCSI ID

在SCSI总线上的每个设备(包括控制器本身)都有一个代表自己的地址，
从总线上的地址线可读出目前占用总线的设备的地址i(二进制形式)

同一总线上绝不绝不能出现ID相同的设备，在整个总线两端的设备也必须
安装适当的终端电阻(termination)


SCSI 逻辑单元编号


有些复核型设备可细分成多个独立单元，例如RAID（可连接多个硬盘，
使其成为一个逻辑上的大硬盘），光盘柜（有多个光盘的光驱）

当SCSI控制器在初始化SCSI总线时会轮询各个设备。非符合型设备不汇报
LUN或是固定汇报LUN 0


Linux的SCSI磁盘设备文件

在linux系统，IDE磁盘的设备文件是
/dev/hda
/dev/hdb
/dev/hdc

在SCSI设备文件名称末尾的编号是依照单一ID/LUN组合上的分区顺序ICI编排

SCSI设备的各种代号

如果SCSI总线上有可开机的磁盘，要将该磁盘的SCSI ID调整为0
或进入SCSI控制器的BIOS来指定可开机磁盘的SCSI ID


终端电阻
SCSI BIOS

当PC开机时，系统的BIOS会优先执行，然后才会执行附加卡上的BIOS
在PC开机画面上，SCSI BIOS的信息是出现在系统BIOS的信息之后
大多数SCSI BIOS会在开机时提示你一个按键组合，
控制器本身的SCSI地址

默认的开机设备

内置的终端电阻
SCSI总线速度

课题1.101.5 扩展卡的安装与设定

安装扩展卡时，要处理如何错开各扩展卡占用的硬件资源(IO端口，IRQ,DMA)


使用/proc文件系统


在安装新硬件到linux系统之前，会要知道当前系统的资源配置状况。
linux将这类信息全集中在/proc文件系统下。
/proc目录下的文件都是linux内核虚拟出来的，
当你读取它们时，内核会实时提供文件内容。

分别查出系统的中断请求(IRQ),DMA信道，I/O端口使用状况，
PCI总线的状态

声卡 ISA
网卡  PCI

cat /proc/dma
cat /proc/ioports

从/proc/pci文件可查出PCI总线的状况。
也可以使用lspci来查询

应该记住标准配备(键盘，鼠标,IDE接口，串行端口，并行端口)的默认
资源配置状况，并知道如何利用/proc文件系统调查系统当前的资源使用情况



ISA PnP

在Linux系统上，要安装ISAPnPTools包
，然后pnpdump与isapnp工具完成资源配置情况，可以看到各个ISA PnP设备所需
的资源(IO端口，IRQ,DMA通道)。
pnpdump输出的信息的格式被科技安排成isapnp可解读的格式。

isapnp依据/etc/isapnp.conf配置文件(通常由pnpdump产生)来设定ISA PnP卡



cat /proc/interrupts

课题1.101.6 设定通信接口设备

如何设定串行端口以及如何设定调制解调器


课题 1.101.7  谁定USB设备


USB(Universal Serial Bus,通用串行总线)是现代PC上常见的“外部”总线，
主要用于连接可以热插拔(hot plugable)的外接设备，包括键盘，鼠标，
数码相机，扫描仪，打印机以及其他

linux对于USB的支持以及如何设定USB设备


USB的结构，是树状，Hub---Device

比较新的PC现在都内置好几个USB主控制器，每个主控制器都可以作为一个“root hub”
一个USB hub(集线器)通常会提供若干个外接孔，用于连接其他USB设备或是
再串接另一个hub.
USB设备本身可以使用总线上的电泳，也可以使用外接的电源

USB 主控器


从软件角度，

USB主控器可分成三种规格：

1.OHCI(Open Host Controller Interface)
2.UHCI(Universal Host Controller Interface)
3.EHCI( Enhanced Host Controller Interface)

考点，要知道USB主控器的规格



USB设备 按照，功能性，可分为：

1.HID(Human Interface Device)

鼠标，键盘之类的输入设备
通信 调制解调器
大容器存储设备 (Mass Storage Device)   磁盘，卡片阅读机

音频  音频设备

IrDA  红外线传输设备

打印机  打印机以及USB-to-paraller缆线

不同种类的USB设备各需要专属的驱动程序


USB驱动程序

linux内核对于USB的支持，扣掉了对USB大量存储设备的支持，

linux内核的USB驱动程序，可分为三类

1. 主控器模块

用于驱动USB主控器，必须依据内核的版本与控制器的规格来选择适当的驱动模块


2. 类别模块

针对不同性质USB设备所写的驱动程序。

3. 难以归类的模块

linux内核里的USB子系统采取分层式设计。最内层usbcore.
它是一个纯软件接口，用于支持所有较高级的模块(包括 USB HCD 与HUB在内)
HCD在中间层，最外层是类别模块或个别设备的模块


依据USB主控器的形式，判断应该加载哪一个驱动模块，

modprobe ehci-hcd

如果没有错误信息，可以猜测ehci-hcd模块已经被顺利链接进内核里，

lsmod

或观察dmesg的输出信息可以

dmesg | grep -i ehci

加载了USB host controller 的驱动模块之后，才可以加载USB设备的驱动模块

以下是一个安装了多个USB设备的系统的/proc/modules的样子

(使用lsmod也可以看到同样的结果)

USB热插拔

USB设备的特性是可以热插拔，它们的驱动程序通常不是直接被编译进内核里，
而是以模块的形式存在，以便配合/sbin/hoplug热插拔机制
与实施加载，卸载USB设备的模块


p47
第二章  linux安装与包管理

