
104.1  创建分区与文件系统
	如何划分磁盘分区(partition),并使用各种弄个mkfs工具
	来制作ext2,ext3,Reiserfs,vafs与xfs等文件系统



104.2  维护文件系统的完整性


利用du,df的工具来检查磁盘空间用量，使用fsck来修复问题



104.3  控制文件系统的挂载和卸载

要能自己动手挂载(mount)，卸载(umount)文件系统，知道如何编辑
/etc/fstab配置文件，使它们可在系统开机时自动挂载以及让用户可使用插入式
储媒(磁盘，光盘，磁带等)



104.4  管理磁盘配合

称职的系统管理者懂得分配足够的磁盘配额空间给用户，

要能够设定文件系统的磁盘配额，编辑，检查，产生用户的配额用量报告


104.5  文件范文权限

要懂得linux系统对于文件的保护措施，这包括如何解读文件的quanx模式
如何省适当的权限，让正确的用户能顺利访问文件，同时又避免泄露
隐私和敏感信息

104.6  管理文件的拥有权

文件与目录的"拥有权"(ownership)其实是linux文件安全管理措施的一部分，

也就是访问权限管理的基础。 如何修改现有文件或目录所属的用户或组
以及如何设定新文件的默认组

104.7 链接文件的管理

如何创建，管理文件的链接。Linux的链接文件分成
"硬链接"(hard link)与"软链接"(soft link)
或称"符号链接"(symbolic link)
要理两种链接的差异以及它们的限制


104.8  系统文件的位置

必须对"文件系统层次结构标准"(Filesystem Hierarchy Standard,FHS)

有铜盘性的认识，包括常见文件的位置以及目录的分类。
要直到如何利用标准工具来找出特定文件于系统上的位置


104.1  创建分区与文件系统


"文件系统"(filesystem) 有两种含义：
1，是指文件与目录在储媒(磁盘)上的具体组织方法与结构

2.代表触媒内容的组织结构，也就是"目录树"(directory tree)

linux采取单目录树设计，磁盘分区必须被挂载(mount)到目录
树上的某个节点----"挂载点"(mount point)，才可以
被访问。挂载可以延伸到网络的远程文件系统
对于用户而言，整个过程都是透明的，所面对的都是同样目录树

比如，/usr目录下的文件，不管是位于本地磁盘还是
位于网络另一端的NFS服务器，用户都可以用同样的操作
方法来访问，只要NFS server与网络都正常运作，
用户甚至感觉不到不同，顶多只有速度上的差异

利用特殊技术，根目录(/)甚至可以不必挂载在本机磁盘。

linux下的磁盘驱动器


磁盘接口贵的

一个IDE接口可以连接两个磁盘，但其中之一必须设定为master模式，
另一种必须设定为slave模式

大多数PC都有两个IDE接口，分别称为primary，secondary
所以，一台标准PC最多可连接四个IDE设备，
如果要连接更多的IDE设备，除非主板上有特制的
IDE子系统，否则就要安装额外的IDE适配器次啊可以


磁盘设备

对于IDE设备，linux默认的设备文件定义：

/dev/hda  Primary master IDE(通常接硬盘)
/dev/had  Primary slave IDE
/dev/hdc Secondary master IDE(通常接光驱)
/dev/hdd  Secondary slave IDE



SCSI 设备文件也是类似，但是没有四个设备的限制：

/dev/sda  第一台SCSI设备
/dev/sdb  第二台SCSI设备
...


SATA硬盘的设备文件采用与SCSI相同的命名惯例

应考诀窍


如何依据设备文件的名称来区分磁盘接口是IDE,SCSI



磁盘分区


几乎每种操作系统都可让你将硬盘划分成多个逻辑河北，
也就是所谓的"分区"(partition)
磁盘的划分情况记录在"分区表"(partition table)中。
分区表的格式随计算机型号和操作系统而异


linux支持多种分割格式，但默认使用MS-DOS格式
这种格式允许你将磁盘最多划分成四个"主分区"(primary partition)
或是三个主分区加一个"扩展分区"(extended partition)

扩展分区可被区分成最多12个"逻辑分区"(logical partition)


一个硬盘最多可划分成15个可用的分区

每一个分区(无论何种类型)都有一个对应的设备文件，
其文件名为所属硬盘的设备文件名加上分区编号。
主分区与扩展分区的编号范围为1～4,逻辑分区则从5开始编号


例如，你的IDE硬盘是以master模式接在primary接口(设备文为/dev/hda

它被划分有两个主分区与一个扩展分区，扩展分区本身又被
划分成3个逻辑分区，则各分区对应的设备文件为：

/dev/hda1 (主分区#1)
/dev/hda2 (主分区#2)
/dev/hda3 (扩展分区)
/dev/hda5 (逻辑分区 #1)
/dev/hda6 (逻辑分区 #2)
/dev/hda7 (逻辑分区 #3)

假设有一块SCSI硬盘(或SATA硬盘)
它被划分有一个主分区与一个扩展分区，扩展
分区又被划分成两个逻辑分区，则各分区对应的设备文件如下：

/dev/sda1 (主分区#1)
/dev/sda2  (延伸分区)
/dev/sda5 (逻辑分区#1)
/dev/sda6 (逻辑分区#2)

要熟记各种分区(主要，扩展，逻辑)的编号原则


各家操作系统都提供了分割磁盘驱动器的工具，
Linux系统所提供的工具为fdisk.

每个分区可以各自容纳自己的文件系统，而制作
文件系统的工具是mkfs


根文件系统与挂载点

分区上的文件系统必须被挂载到"目录树"(directory tree)上的某个节点---
称为挂载点(mount point)
挂载点跟普通目录没有不同，只不过它们是用来作为分区(文件系统)的入口。
在未挂载之前，挂载点目录下通常是全空的


目录树的最顶层称为"根"，以/符号表示，它是一个很特殊的挂载点。
当Linux系统开机时，会优先挂载"根文件系统"(root filesystem)
然后才依据/etc/fstab来挂载其他文件系统。至于根文件系统在哪一个分区，
则由Linux内核的开机参数root决定(通常由LILO或GRUB来提供root参数值)


理论上，根文件系统可以包含整个目录树，事实上，许多小型系统也是如此

不应该将所有数据都放在同一个文件系统中。在实践中，常将不同性质的目录分别
对应到不同的分区，甚至是不同磁盘的分区。


至于哪些目录应该放在独立的分区，涉及个人习惯与专业上的据诶到哪个，

/(根目录)
	由于开机过程之初只会挂载根文件系统，所以有些重要目录必须放在此分区，
	系统才能顺利开机。这些必要的目录包括：
	/bin与/sbin 包含必要的系统二进制二建
	/dev 设备文件
	/etc  几乎所有配置文件都在此目录下
	lib   执行/bin与/sbin下的程序时所需要的公共函数库

/boot 
	此目录含有boot loader所需的静态文件，包括kernel image(内核镜像)
	在实践中，常将/boot放在磁盘上的第一个分区，避开BIOS 1024-cylinder的限制


/home

	此目录主要用户存储用户的个人文件。由于是主要工作区，经常变动，而且
	可能需要庞大的存储空间，这些理由使得/home常被防止在独立的分区，
	甚至是独立的实体磁盘或磁盘阵列。不过，对于某些类型的服务(如防火墙)
	此目录也可能不重要


/tmp
	/tmp主要用来存放临时性文件。虽然所需的空间不是很大，但由于其
	权限是完全开放的，所以常被放在自己的专属分区，以免有人恶意在
	/tmp下产生超大文件，而排挤了其他文件系统的可用空间



/var
	此目录专用来存放经常变动的文件，比如日志文件。基于与/tmp同样的
	安全考虑,/var也常被放在独立分区，以免因为忘了定期清理日志文件，
	而排挤了其他文件系统的空间

/usr
	这是一个庞大的目录树，其中包括用户的工具程序，
 	应用程序(/usr/bin, /usr/sbin)
	源程序(/usr/src)
	文件(/usr/share/doc)等
	由于所需的空间相当大，所以也经常被放在独立分区。这样做的一个好处
	由于/usr/目录下的信息几乎都是静态不变的，所以有些管理者
	偏好以只读模式来挂载它，以避免它遭到毁坏。

除了以上6个分区，linux还需要一个swap分区以启动虚拟内存。
swap分区的大小通常是系统内存常量的两倍


在安装Linux系统的期间，上述原则可以帮你规划磁盘分区，
假设一台文件服务器，这台及其有两块IDE硬盘(/dev/hda与/dev/hdc)
容量分别为40GB,80GB

文件服务器的磁盘划分实例



分区             类型             文件系统            容量
/dev/hda1        主要            /boot                512MB
/dev/hda2         主要             /                4GB
/dev/hda3       扩展                                   35.5GB
/dev/hda5        逻辑             /usr               20GB
/dev/hda6       逻辑               /tmp               512MB
/dev/hda7      逻辑                /var                  13GB
/dev/had8      逻辑               swap                   2GB
/dev/hdc1      主要               /home                  80GB


管理分区


对于磁盘驱动器的划分，Linux提供的标准工具是fdisk,另一个是cfdisk.

前者是每家linux版本都提供的文本模式的程序，后者以curse函数库写出来的TUI
菜单式工具。

fdisk

语法
	fdisk [option] device

说明

fdisk 可显示或编辑特定磁盘的分区表(partition table)
它提供一个简单的文本操作接口

fdisk /dev/sda

常用指令

a   改变某分区的bootable标记。习惯上，对第一个主要分区(或是要挂载
	在/boot的分区)应该设立此标记

d  删除一个分区。fdisk会雯你要删除哪一个分区。如果删除扩展翻去，则所有
	逻辑分区会跟着小时；若删除某逻辑分区，则其后的逻辑分区编号将
	往前递补，以维持逻辑分区编号的连贯性

l 列出已知的分区类型与系统标识符


m 显示出指令列表

n 新增一个分区。fdisk会依序问你一下问题：
	分区的类型(primary,extended 或logical)
	分区的编号，起始磁柱(cylinder)的编号，结尾磁柱的编号。
	主分区与扩展分区的编号范围为1~4,逻辑分区从5开始编号。
	输入结尾磁珠的编号时，可以输入"容量值"来代替(例如 "+512M")
	fdisk会依据你给的容量值自动算出结尾磁柱的编号。	
	对于新建的好的分区，fdisk会自动将其类型代码设定为83(Linux native)
	如果该分区要作为swap或是要用于其他操作系统，则必须以t指令来变更
	分区的系统标识符


p   显示内存中的分区表(partition table).如果你所做的变动尚未写回
	磁盘，则你所见到的状态将不同于实际存放在磁盘上的分区表



q 不修改分区表而直接离开fdisk。除非事前以w命令将内存中的分区表写回
	磁盘，否则你所做的改变会消失



t 变更分区的系统标识符(system ID).这是一个十六机制的数字，代表分区
	所含文件系统的类型。Linux分区的系统标识符为83，而Linux swap
	分区的系统标识符为82

w  将内存中的分区表写回磁盘。在此命令之前，你所做的任何改变都不会
	影响磁盘上的分区表



范例


1.显示 /dev/sda上现有的分区表，不做任何变动


fdisk /dev/sda


面对的/dev/sda是一个大容量的200GB磁盘，磁柱有三个主要分区(sda1~sda3)
其中前两个是用于Linux系统，第三个（sda3)是用来安装Windows系统
(从其系统标识符HPFS/NTFS可看出来)
sda4是扩展分区，它占有其余的可用空间；sda5~sda8都是逻辑分区(它们都是
sda4扩展分区的一部分)，其中sda7被用来作为Linux swap


2.从空的分区表开始，在/dev/sdb1 上创建一个300MB的引导区；在/dev/sdb2
创建一个涵盖整个硬盘其余空间的扩展分区；在/dev/sdb5创建一个200MB
的逻辑分区;在/dev/hda6 创建一个128MB的swap分区；
最后将其余空间都分配给/dev/hda7 逻辑分区

fdisk /dev/sdb

在操作过程中，fdisk会给你提示默认值，如果接受，直接按Enter即可。
若需要指定容量，可以使用类似+128M之类的格式，其中M代表megabytes



警告


使用Linux版fdisk工具来制作其他操作系统的分区，可能会遇到一些问题。
原则上，要给什么操作系统用的分区，就应该尽量以该系统的工具来制作


对运作中的系统使用fdisk可能会导致危险。
要被修改分区表的硬盘上不应该有任何分区被挂载咋系统上。
否则，按下w指令之后可能会让你的磁盘崩溃


应该了解分区表，分区的编号方式，并且熟悉使用fdisk创建分区的过程


创建文件系统

对于刚划分好的磁盘分区，必须先安装文件系统才可以供Linux使用。
以Windows的，“安装文件系统"就是"格式化"(formatted)


不同类型的文件系统各有其专属的格式化工具。
例如，ext2,ext3文件系统的制作工具是mkfs.ext2与mkfs.ext3(其实它们
是mke2fs的符号链接):
resiserfs文件系统的制作工具是mkreiserfs.有一个统一的前台工具，
Linux提供了mkfs工具，它会依据指定的文件系统类型，
帮你调用正确的工具来制作文件系统


mkfs
语法

	mkfs [-t fs_type] [fs_options] device



说明


在device 上建立fs_type类型的文件类型。若没有明确指定fs_type,
则默认值是ext2.当mkfs启动对应的格式化工具时，会将你指定的fs_options
传递给该程序。

常用的fs_options选项


-c  检查device是否有故障块。mke2fs与mkdosfs适用
-L label   设定文件系统的卷标(volume label) .仅mke2f适用，对于
	 mkdosfs,此选项要改成-n,而且lebel不得超过11个字符
-q
	抑制执行过程所产生的信息
-v

	详尽显示执行过程中的每一个步骤。适用于mke2fs与kdosfs

范例


1.将/dev/sdb1 分区格式化成ext2文件系统，执行过程尽量低调(不输出详细信息)

mkfs -t ext2 -q /dev/sdb1



2.将/dev/sdb1分区格式化成ext3文件系统，将卷表设定为modisk,
格式化过程要检查故障块并产生完整而详细的输出信息



mkfs -t ext3 -L modisk -cv /dev/sdb1


不同文件系统的格式化工具各有其专属的微调选项，

制作swap分区


每一个正常运作的Linux系统都至少应该有一个swap分区，
这个特殊的分区不被挂载到目录树，而是被当场虚拟内存使用，
制作swap文件系统的工具是mkswap


mkswap


语法
	mkswap device


说明
将指定的分区或文件格式化成交换分区


范例


假设/dev/hda5是一个系统标识符已被设定为82(Linux swap)
的分区，下列命令可以将它格式化为交换空间


mkswap /dev/hda5


事实上，Linux的交换空间不一定要放在独立分区，也可以先准备一个够大
的文件，


然后用mkswap制作此文件的格式


mkswap swapfile


制作好交换分区格式之后，还必须用swapon命令让交换分区生效


swapon /dev/hda5

或

swapon  swapfile

警告


fdisk,mkfs的磁盘工具，对于磁盘数据的破坏力很大，不要搞错！


104.2   维护文件系统的完整性



任何长期运作的操作系统，包括linux在内，文件系统都会渐渐出现出现一些问题：
1.存储空间耗尽，造成某些程序甚至整个系统瘫痪
2. 数据结构损毁，可能是因停电，不当操作或任何无法预料的意外
3. 耗尽所有的inode,以至于无法创建新的文件或目录(及时还有存储空间)


避免问题的不变法则，就是定期的监控与检查。Linux提供一系列工具
帮助你避免，修复文件系统的问题


监控可用的磁盘空间与inode数量

一个可供读写的文件系统有可能不能再继续容纳新文件，这可能是由于存储
空间耗尽或没有剩余的inode可用



Inode是文件系统中的数据结构，用以记录文件的属性，像是位于磁盘中的
位置，拥有者为谁，所属组，访问权限等。
当你使用mkfs制作文件系统时，其实就是将inode的存储区写入磁盘，
文件系统对的inode数量是有限的，而inode的数量也就是文件系统
所能容纳的文件数量的上限。几乎所有文件系统在建立时都会预先设置大量的
inode,所以耗光inode的机会并不多，比较可能发生的情况是同一个分区装填了太多
小文件才会发生这种现象


避免系统分区发生存储空间耗尽或inode不足的下新娘，是系统管理员平时就要
担负的责任。
df 可提供该磁盘空间用量与inode用量


如果耗尽磁盘空间，最简单的解决方法是删除文件或将文件移动到
其他文件系统(不一定可行)
遇到inode不足，那么除非能够删除大量文件，否则所腾挪出来的
inode数量还是有限的


df 
语法
	df [options] [dirs]


说明
显示dirs所属的文件系统的磁盘空间用量。dirs可以是任何目录，df会
依据/etc/fstab配置文件找出dirs的挂载点，然后显示对应文件
系统的信息。若没有指定任何dirs，则df会显示所有已挂载的
文件系统的嘻嘻

常用选项


df -h  以较容易辨识的单位(如M,G)显示数值
df -i 显示inode用量的信息。若不指定此选项，则显示磁盘空间用量


范例

1.查看所有文件系统的磁盘空间用量


df -h

所有文件系统的用量都不超过5成，表示这个系统还有足够的存储空间


2. 查看所有文件系统的inode用量

df -i


例子中，inode用量最多的是/usr文件系统，


3. 查看当前工作目录位于哪个分区

df .

监控磁盘用量

p179
